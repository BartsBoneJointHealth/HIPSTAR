install.packages("omopgenerics")
install.packages("remotes")
install.packages("omopgenerics")
readData <- function() {
files <- list.files(here::here("data"), full.names = TRUE)
filesCsv <- files[tools::file_ext(files) == "csv"]
data <- readFiles(filesCsv)
filesZip <- files[tools::file_ext(files) == "zip"]
tmpdir <- tempdir()
for (fileZipe in filesZip) {
unzip(fileZipe, exdir = tmpdir)
files <- list.files(here::here("data"), full.names = TRUE)
filesCsv <- files[tools::file_ext(files) == "csv"]
data <- readFiles(filesCsv)
}
types <- patterns <- c("cdm_summary", "patient_demographics", "large_Scale_characteristics", "results")
for (ty in types) {
if (ty %in% names(data)) {
data[[ty]] <- data[[ty]] |>
dplyr::distinct() |>
omopgenerics::newSummarisedResult()
}
}
return(data)
}
readFiles <- function(files, data = list()) {
for (file in files) {
pat <- getPat(file)
if (!is.null(pat)) {
x <- readr::read_csv(file, col_types = c(result_id = "i", .default = "c"))
if (pat == "results") {
data <- data |> addData("results", x)
} else {
data <- data |> addData(pat, x)
}
}
}
return(data)
}
getPat <- function(f) {
id <- NULL
fname <- basename(f)
patterns <- c("cdm_summary", "patient_demographics", "large_Scale_characteristics", "results")
for (pat in patterns) {
if (startsWith(fname, pat)) {
id <-pat
}
}
if (is.null(id)) {
patterns <- paste0(patterns, collapse = ", ")
cli::cli_inform(c("!" = "file: {f} is ignored as does not start with either: {patterns}."))
}
return(id)
}
addData <- function(dat, id, x) {
if (id %in% names(dat)) {
dat[[id]] <- dat[[id]] |> dplyr::union_all(x)
} else {
dat[[id]] <- x
}
return(dat)
}
x <- readData()
x
library(shiny)
library(shinydashboard)
source(here("functions.R"))
source(here::here("functions.R"), local = TRUE)
data <- readData()
library(shiny)
library(shinydashboard)
source(here::here("functions.R"), local = TRUE)
data <- readData()
data
# theme -----
mytheme <- fresh::create_theme(
adminlte_color(
light_blue = "#0c0e0c"
),
adminlte_sidebar(
# width = "400px",
dark_bg = "#78B7C5",
dark_hover_bg = "#3B9AB2",
dark_color = "white"
),
adminlte_global(
content_bg = "#eaebea"
),
adminlte_vars(
border_color = "#112446",
active_link_hover_bg = "#FFF",
active_link_hover_color = "#112446",
active_link_hover_border_color = "#112446",
link_hover_border_color = "#112446"
)
)
install.packages("fresh")
# theme -----
mytheme <- fresh::create_theme(
adminlte_color(
light_blue = "#0c0e0c"
),
adminlte_sidebar(
# width = "400px",
dark_bg = "#78B7C5",
dark_hover_bg = "#3B9AB2",
dark_color = "white"
),
adminlte_global(
content_bg = "#eaebea"
),
adminlte_vars(
border_color = "#112446",
active_link_hover_bg = "#FFF",
active_link_hover_color = "#112446",
active_link_hover_border_color = "#112446",
link_hover_border_color = "#112446"
)
)
# theme -----
mytheme <- fresh::create_theme(
fresh::adminlte_color(
light_blue = "#0c0e0c"
),
fresh::adminlte_sidebar(
# width = "400px",
dark_bg = "#78B7C5",
dark_hover_bg = "#3B9AB2",
dark_color = "white"
),
fresh::adminlte_global(
content_bg = "#eaebea"
),
fresh::adminlte_vars(
border_color = "#112446",
active_link_hover_bg = "#FFF",
active_link_hover_color = "#112446",
active_link_hover_border_color = "#112446",
link_hover_border_color = "#112446"
)
)
mytheme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data$cdm_summary
data$cdm_summary
install.packages("visOmopResults")
x <- data$cdm_summary
x |>
visOmopResults::formatTable()
x |>
visOmopResults::visOmopTable()
x |>
visOmopResults::visOmopTable(formatEstimateName = list(), header = c("cdm_name"))
x |>
visOmopResults::visOmopTable(formatEstimateName = character(), header = c("cdm_name"))
x |>
visOmopResults::visOmopTable(formatEstimateName = c("N" = "<count>"), header = c("cdm_name"))
x |>
visOmopResults::visOmopTable(formatEstimateName = c("N" = "<count>"), header = c("cdm_name"), split = c("group", "strata", "additional"))
x
x
x |>
visOmopResults::visOmopTable(
formatEstimateName = c("N" = "<count>"),
header = c("cdm_name"),
split = c("group", "strata", "additional"),
excludeColumns = "variable_level"
)
x |>
visOmopResults::visOmopTable(
formatEstimateName = c("N" = "<count>"),
header = c("cdm_name"),
split = c("group", "strata", "additional"),
excludeColumns = c("variable_level", "result_id", "estimate_type")
)
x |>
dplyr::mutate(estimate_name = stringr::str_to_sentence(.data$estimate_name)) |>
visOmopResults::visOmopTable(
formatEstimateName = character(),
header = c("cdm_name"),
split = c("group", "strata", "additional"),
excludeColumns = c("variable_level", "result_id", "estimate_type")
)
x |>
dplyr::mutate(
estimate_name = gsub("_", "", .data$estimate_name),
estimate_name = stringr::str_to_sentence(.data$estimate_name)) |>
visOmopResults::visOmopTable(
formatEstimateName = character(),
header = c("cdm_name"),
split = c("group", "strata", "additional"),
excludeColumns = c("variable_level", "result_id", "estimate_type")
)
x |>
dplyr::mutate(
estimate_name = gsub("_", " ", .data$estimate_name),
estimate_name = stringr::str_to_sentence(.data$estimate_name)) |>
visOmopResults::visOmopTable(
formatEstimateName = character(),
header = c("cdm_name"),
split = c("group", "strata", "additional"),
excludeColumns = c("variable_level", "result_id", "estimate_type")
)
runApp()
runApp()
runApp()
runApp()
data$patient_demographics
data$patient_demographics$group_level |> unique()
data$patient_demographics
data$patient_demographics |> CohortCharacteristics
install.packages("CohortCharacteristics")
data$patient_demographics |> CohortCharacteristics::tableCharacteristics()
data$patient_demographics
data$patient_demographics
data$patient_demographics
data$patient_demographics
getDemographics() |>
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(header = c("cdm_name"), excludeColumns = c("group"))
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(header = c("cdm_name"), excludeColumns = c("group"))
getDemographics() |>
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(header = c("cdm_name"), excludeColumns = c("group"), split = c("strata", "additional"))
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(header = c("cdm_name"), excludeColumns = c("group"), split = c("strata", "additional"))
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(header = c("cdm_name"))
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(header = c("cdm_name"), excludeColumns = c("cohort_name"))
data$patient_demographics |>
dplyr::filter(!estimate_name %in% c("q05", "q95")) |>
CohortCharacteristics::tableCharacteristics(
header = c("cdm_name"),
excludeColumns = c("cohort_name", "result_id", "estimate_type", "additional_name", "additional_level"))
runApp()
runApp()
runApp()
runApp()
runApp()
data$patient_demographics$variable_name |> unique()
runApp()
data$cdm_summary
data$patient_demographics
runApp()
data$lsc
data$lsc
data$lsc |>
dplyr::filter(estimate_name == "percentage") |>
dplyr::select("cdm_name", "variable_name", "window" = "variable_level", "estimate_value", "additional_name", "additional_level") |>
visOmopResults::splitAdditional() |>
dplyr::mutate(estimate_value = as.integer(estimate_value))
data$lsc |>
dplyr::filter(estimate_name == "percentage") |>
dplyr::select("cdm_name", "variable_name", "window" = "variable_level", "estimate_value", "additional_name", "additional_level") |>
dplyr::mutate(dplyr::across(
dplyr::starts_with("additional"), ~ gsub("and", "&&&", .x)
)) |>
visOmopResults::splitAdditional() |>
dplyr::mutate(estimate_value = as.integer(estimate_value))
data$lsc |>
dplyr::filter(estimate_name == "percentage") |>
dplyr::select("cdm_name", "variable_name", "window" = "variable_level", "estimate_value", "additional_name", "additional_level") |>
dplyr::mutate(dplyr::across(
dplyr::starts_with("additional"), ~ gsub(" and ", " &&& ", .x)
)) |>
visOmopResults::splitAdditional() |>
dplyr::mutate(estimate_value = as.integer(estimate_value))
data$lsc |>
dplyr::filter(estimate_name == "percentage") |>
dplyr::select("cdm_name", "variable_name", "window" = "variable_level", "estimate_value", "additional_name", "additional_level") |>
dplyr::mutate(dplyr::across(
dplyr::starts_with("additional"), ~ gsub(" and ", " &&& ", .x)
)) |>
visOmopResults::splitAdditional() |>
dplyr::mutate(estimate_value = as.numeric(estimate_value)) |>
dplyr::select("cdm_name", "concept_name" = "variable_name", "concept_id" = "concept", "window", "percentage" = "estimate_value")
x <- data$lsc |>
dplyr::filter(estimate_name == "percentage") |>
dplyr::select("cdm_name", "variable_name", "window" = "variable_level", "estimate_value", "additional_name", "additional_level") |>
dplyr::mutate(dplyr::across(
dplyr::starts_with("additional"), ~ gsub(" and ", " &&& ", .x)
)) |>
visOmopResults::splitAdditional() |>
dplyr::mutate(estimate_value = as.numeric(estimate_value)) |>
dplyr::select("cdm_name", "concept_name" = "variable_name", "concept_id" = "concept", "window", "percentage" = "estimate_value")
x |>
tidyr::pivot_wider(names_from = character())
runApp()
runApp()
x|>
dplyr::summarise(n = dplyr::n(), .by = c(concept_name, concept_id, window, cdm_name)) |>
dplyr::filter(n > 1L)
data <- readData()
data$lsc <- data$lsc |>
dplyr::filter(estimate_name == "percentage") |>
dplyr::select("cdm_name", "variable_name", "window" = "variable_level", "estimate_value", "additional_name", "additional_level") |>
dplyr::mutate(dplyr::across(
dplyr::starts_with("additional"), ~ gsub(" and ", " &&& ", .x)
)) |>
visOmopResults::splitAdditional() |>
dplyr::mutate(estimate_value = as.numeric(estimate_value), concept = as.integer(concept)) |>
dplyr::select("cdm_name", "table_name", "concept_name" = "variable_name", "concept_id" = "concept", "window", "percentage" = "estimate_value")
data$lsc
runApp()
renv::snapshot()
renv::init()
renv::activate()
renv::snapshot()
shiny::runApp()
